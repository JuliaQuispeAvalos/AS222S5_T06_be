name: Publsh to Docker/DockerHub

on:
  push:
    branches:
      - develop-spring-boot

jobs:
  build:
    runs-on: ubuntu-latest
    env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
        DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        API_KEY: ${{ secrets.API_KEY }}
        API_CHATGPT_HOST: ${{ secrets.API_CHATGPT_HOST }}
        API_CHATGPT_KEY: ${{ secrets.API_CHATGPT_KEY }}
        API_CHATGPT_URL: ${{ secrets.API_CHATGPT_URL }}

    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'  # O puedes usar 'temurin' si prefieres

      - name: Build with Maven
        run: mvn clean package  # Asegúrate de que este comando se adapte a tu proyecto

      - name: Get image tag
        id: tags
        run: |
          version=$(grep 'FROM' $GITHUB_WORKSPACE/Dockerfile | awk -F':' '{print $2}' | awk -F'-' '{print $1}')
          echo "version=$version" >> $GITHUB_ENV

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push to Docker Hub
        uses: docker/build-push-action@v2
       
        with:
          context: .  # Define el contexto de construcción
          file: Dockerfile  # Asegúrate de que el archivo Dockerfile esté en la raíz del repositorio
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/inteligencia:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/inteligencia:${{ env.version }}

      - name: Clean up
        run: docker system prune -af  # Opcional, limpia el sistema Docker
